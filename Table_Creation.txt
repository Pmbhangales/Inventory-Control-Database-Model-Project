--Table Creation


-- Create table for Brands
CREATE TABLE brands (
    brand_id INT PRIMARY KEY,
    brand_name VARCHAR(255) NOT NULL
);

-- use "DESCRIBE brands;" to get/view the table structure.
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| brand_id   | int          | NO   | PRI | NULL    |       |
| brand_name | varchar(255) | NO   |     | NULL    |       |
+------------+--------------+------+-----+---------+-------+
2 rows in set (0.02 sec)


-- Create Users Table
CREATE TABLE inv_user (
    email VARCHAR(255) PRIMARY KEY,
    user_name VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    created_on TIMESTAMP,
    role VARCHAR(50) NOT NULL
);

-- use "DESCRIBE inv_user;" to get/view the table structure.
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| email      | varchar(255) | NO   | PRI | NULL    |       |
| user_name  | varchar(255) | NO   |     | NULL    |       |
| password   | varchar(255) | NO   |     | NULL    |       |
| created_on | timestamp    | YES  |     | NULL    |       |
| role       | varchar(50)  | NO   |     | NULL    |       |
+------------+--------------+------+-----+---------+-------+
5 rows in set (0.00 sec)

-- Create Categories Table
CREATE TABLE categories (
    category_id INT PRIMARY KEY,
    category_name VARCHAR(255) NOT NULL
);

-- use "DESCRIBE categories;" to get/view the table structure.
+---------------+--------------+------+-----+---------+-------+
| Field         | Type         | Null | Key | Default | Extra |
+---------------+--------------+------+-----+---------+-------+
| category_id   | int          | NO   | PRI | NULL    |       |
| category_name | varchar(255) | NO   |     | NULL    |       |
+---------------+--------------+------+-----+---------+-------+
2 rows in set (0.00 sec)


-- Create Stores Table
CREATE TABLE stores (
    store_id INT PRIMARY KEY,
    store_owner VARCHAR(255) NOT NULL,
    store_address VARCHAR(255) NOT NULL,
    store_contact BIGINT NOT NULL
);

-- use "DESCRIBE Stores;" to get/view the table structure.
+---------------+--------------+------+-----+---------+-------+
| Field         | Type         | Null | Key | Default | Extra |
+---------------+--------------+------+-----+---------+-------+
| store_id      | int          | NO   | PRI | NULL    |       |
| store_owner   | varchar(255) | NO   |     | NULL    |       |
| store_address | varchar(255) | NO   |     | NULL    |       |
| store_contact | bigint       | NO   |     | NULL    |       |
+---------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)


-- Create Products Table
CREATE TABLE product (
    product_id INT PRIMARY KEY,
    category_id INT,
    brand_id INT,
    store_id INT,
    product_name VARCHAR(255) NOT NULL,
    quantity_in_stock INT NOT NULL,
    unit_price DECIMAL(10, 2) NOT NULL,
    added_on TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES categories(category_id),
    FOREIGN KEY (brand_id) REFERENCES brands(brand_id),
    FOREIGN KEY (store_id) REFERENCES stores(store_id)
);

-- use "DESCRIBE product;" to get/view the table structure.
+-------------------+---------------+------+-----+---------+-------+
| Field             | Type          | Null | Key | Default | Extra |
+-------------------+---------------+------+-----+---------+-------+
| product_id        | int           | NO   | PRI | NULL    |       |
| category_id       | int           | YES  | MUL | NULL    |       |
| brand_id          | int           | YES  | MUL | NULL    |       |
| store_id          | int           | YES  | MUL | NULL    |       |
| product_name      | varchar(255)  | NO   |     | NULL    |       |
| quantity_in_stock | int           | NO   |     | NULL    |       |
| unit_price        | decimal(10,2) | NO   |     | NULL    |       |
| added_on          | timestamp     | YES  |     | NULL    |       |
+-------------------+---------------+------+-----+---------+-------+
8 rows in set (0.01 sec)


-- Create Customer Cart Table
CREATE TABLE customer_cart (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    contact_number BIGINT NOT NULL
);

-- use "DESCRIBE customer_cart;" to get/view the table structure.
+----------------+--------------+------+-----+---------+-------+
| Field          | Type         | Null | Key | Default | Extra |
+----------------+--------------+------+-----+---------+-------+
| customer_id    | int          | NO   | PRI | NULL    |       |
| customer_name  | varchar(255) | NO   |     | NULL    |       |
| contact_number | bigint       | NO   |     | NULL    |       |
+----------------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)


-- Create Select Product Table (Many-to-Many between Customer Cart and Product)
CREATE TABLE select_product (
    select_id INT PRIMARY KEY,
    customer_id INT,
    product_id INT,
    FOREIGN KEY (customer_id) REFERENCES customer_cart(customer_id),
    FOREIGN KEY (product_id) REFERENCES product(product_id)
);

-- use "DESCRIBE select_product;" to get/view the table structure.
+-------------+------+------+-----+---------+-------+
| Field       | Type | Null | Key | Default | Extra |
+-------------+------+------+-----+---------+-------+
| select_id   | int  | NO   | PRI | NULL    |       |
| customer_id | int  | YES  | MUL | NULL    |       |
| product_id  | int  | YES  | MUL | NULL    |       |
+-------------+------+------+-----+---------+-------+
3 rows in set (0.01 sec)


-- Create Transaction Table
CREATE TABLE transaction (
    transaction_id INT PRIMARY KEY,
    total_amount DECIMAL(10, 2) NOT NULL,
    amount_paid DECIMAL(10, 2) NOT NULL,
    balance_amount DECIMAL(10, 2) NOT NULL,
    tax DECIMAL(5, 2),
    discount DECIMAL(5, 2),
    payment_method VARCHAR(50),
    select_id INT,
    FOREIGN KEY (select_id) REFERENCES select_product(select_id)
);

-- use "DESCRIBE transaction;" to get/view the table structure.
+----------------+---------------+------+-----+---------+-------+
| Field          | Type          | Null | Key | Default | Extra |
+----------------+---------------+------+-----+---------+-------+
| transaction_id | int           | NO   | PRI | NULL    |       |
| total_amount   | decimal(10,2) | NO   |     | NULL    |       |
| amount_paid    | decimal(10,2) | NO   |     | NULL    |       |
| balance_amount | decimal(10,2) | NO   |     | NULL    |       |
| tax            | decimal(5,2)  | YES  |     | NULL    |       |
| discount       | decimal(5,2)  | YES  |     | NULL    |       |
| payment_method | varchar(50)   | YES  |     | NULL    |       |
| select_id      | int           | YES  | MUL | NULL    |       |
+----------------+---------------+------+-----+---------+-------+
8 rows in set (0.00 sec)


-- Create Invoice Table
CREATE TABLE invoice (
    invoice_id INT PRIMARY KEY,
    product_name VARCHAR(255),
    quantity INT,
    total_price DECIMAL(10, 2),
    customer_id INT,
    FOREIGN KEY (customer_id) REFERENCES customer_cart(customer_id)
);

-- use "DESCRIBE invoice;" to get/view the table structure.
+--------------+---------------+------+-----+---------+-------+
| Field        | Type          | Null | Key | Default | Extra |
+--------------+---------------+------+-----+---------+-------+
| invoice_id   | int           | NO   | PRI | NULL    |       |
| product_name | varchar(255)  | YES  |     | NULL    |       |
| quantity     | int           | YES  |     | NULL    |       |
| total_price  | decimal(10,2) | YES  |     | NULL    |       |
| customer_id  | int           | YES  | MUL | NULL    |       |
+--------------+---------------+------+-----+---------+-------+
5 rows in set (0.01 sec)


-- Create Provides Table (Many-to-Many between Product and Stores)
CREATE TABLE provides (
    provide_id INT PRIMARY KEY,
    product_id INT,
    store_id INT,
    FOREIGN KEY (product_id) REFERENCES product(product_id),
    FOREIGN KEY (store_id) REFERENCES stores(store_id)
);

-- use "DESCRIBE provides;" to get/view the table structure.
+------------+------+------+-----+---------+-------+
| Field      | Type | Null | Key | Default | Extra |
+------------+------+------+-----+---------+-------+
| provide_id | int  | NO   | PRI | NULL    |       |
| product_id | int  | YES  | MUL | NULL    |       |
| store_id   | int  | YES  | MUL | NULL    |       |
+------------+------+------+-----+---------+-------+
3 rows in set (0.00 sec)
